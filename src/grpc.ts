import { grpc } from '@improbable-eng/grpc-web';import { SubscribeRequest } from './generated/protos/monocle_pb';import { SubscribeService } from './generated/protos/monocle_pb_service';const request = new SubscribeRequest();const client = grpc.client(SubscribeService.Subscribe, {  // host: 'http://ipv6:[2001:41d0:e:1194::1]:9850',  host: 'http://localhost:8080',});client.onHeaders((headers: grpc.Metadata) => {  console.log('onHeaders', headers);});client.onMessage((message) => {  console.log('onMessage', message);  console.log('onMessage', message.toObject());});client.onEnd((status: grpc.Code, statusMessage: string, trailers: grpc.Metadata) => {  console.log('onEnd', status, statusMessage, trailers);});client.start();client.send(request);export { client };